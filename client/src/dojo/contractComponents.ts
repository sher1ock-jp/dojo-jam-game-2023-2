/* Autogenerated file. Do not edit manually. */

// @ts-ignore
import { defineComponent, Type as RecsType, World } from "@latticexyz/recs";

export function defineContractComponents(world: World) {
  return {
    Authorization: (() => {
      const name = "Authorization";
      return defineComponent(
        world,
        {
          creator_address: RecsType.BigInt,
        },
        {
          metadata: {
            name: name,
            types: ["ContractAddress"],
          },
        }
      );
    })(),
    Color: (() => {
      const name = "Color";
      return defineComponent(
        world,
        {
          r: RecsType.Number,
          g: RecsType.Number,
          b: RecsType.Number,
          a: RecsType.Number,
        },
        {
          metadata: {
            name: name,
            types: ["u8","u8","u8","u8"],
          },
        }
      );
    })(),
    Connection: (() => {
      const name = "Connection";
      return defineComponent(
        world,
        {
          pixel_connected_land_id: RecsType.Number,
          pixel_connected_pixel_id: RecsType.Number,
        },
        {
          metadata: {
            name: name,
            types: ["u8","u16"],
          },
        }
      );
    })(),
    PixelAddress: (() => {
      const name = "PixelAddress";
      return defineComponent(
        world,
        {
          pixel_explanation: RecsType.BigInt,
        },
        {
          metadata: {
            name: name,
            types: ["felt252"],
          },
        }
      );
    })(),
    Condition: (() => {
      const name = "Condition";
      return defineComponent(
        world,
        {
          pixel_nature: RecsType.Number,
          pixel_address: RecsType.BigInt,
        },
        {
          metadata: {
            name: name,
            types: ["u8","ContractAddress"],
          },
        }
      );
    })(),
    Land: (() => {
      const name = "Land";
      return defineComponent(
        world,
        {
          land_id: RecsType.Number,
          height: RecsType.Number,
          width: RecsType.Number,
        },
        {
          metadata: {
            name: name,
            types: ["u8","u8","u8"],
          },
        }
      );
    })(),
    Player: (() => {
      const name = "Player";
      return defineComponent(
        world,
        {
          player_name: RecsType.BigInt,
          player_land_position: RecsType.Number,
          player_pixel_position: RecsType.Number,
        },
        {
          metadata: {
            name: name,
            types: ["felt252","u8","u16"],
          },
        }
      );
    })(),
  };
}
